$date
	Sun May 14 17:50:29 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module controller_tb $end
$scope module uut $end
$var wire 4 ! funct [3:0] $end
$var wire 3 " op [2:0] $end
$var wire 1 # pcsrc $end
$var wire 1 $ zero $end
$var wire 1 % regwrite $end
$var wire 1 & regdst $end
$var wire 1 ' memwrite $end
$var wire 1 ( memtoreg $end
$var wire 1 ) jump $end
$var wire 1 * branch $end
$var wire 1 + alusrc $end
$var wire 2 , aluop [1:0] $end
$var wire 4 - alucontrol [3:0] $end
$scope module ad $end
$var wire 4 . funct [3:0] $end
$var wire 2 / aluop [1:0] $end
$var reg 4 0 alucontrol [3:0] $end
$upscope $end
$scope module md $end
$var wire 3 1 op [2:0] $end
$var wire 1 % regwrite $end
$var wire 1 & regdst $end
$var wire 1 ' memwrite $end
$var wire 1 ( memtoreg $end
$var wire 1 ) jump $end
$var wire 1 + branch $end
$var wire 1 * alusrc $end
$var wire 2 2 aluop [1:0] $end
$var reg 9 3 controls [8:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
x*
x)
x(
x'
x&
x%
x$
x#
bx "
bx !
$end
#100
0#
0(
0'
0*
0+
1&
1%
0)
b10 ,
b10 /
b10 2
b100 -
b100 0
b11010 3
1$
b1 !
b1 .
b0 "
b0 1
